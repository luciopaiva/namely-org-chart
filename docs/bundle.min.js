!function(t,e){"use strict";function n(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var o=n(t);class r{constructor(t){if(this.children=[],"string"!=typeof t.id)throw new Error("Field id is mandatory");this.id=t.id,this.name=t.full_name,this.title=t.job_title,this.parentId=t.parent_id,this.imgUrlBig=t.img_75_cdn,this.imgUrlMedium=t.img_40_cdn,this.imgUrlSmall=t.img_36_cdn}hasParent(){return"string"==typeof this.parentId&&this.parentId.length>0}}class i{constructor(t){this.personById=new Map;const e=t.people;this.preparePeople(e),this.linkParentsAndChildren(),this.findRootPerson(),this.countLeafNodes(),this.findTreeHeight(),this.findMaximumDegree()}getRoot(){return this.root}preparePeople(t){for(const e of t){const t=new r(e);this.personById.set(t.id,t)}console.info(`Total people found: ${this.personById.size}`)}linkParentsAndChildren(){for(const t of this.personById.values()){const e=t.parentId?this.personById.get(t.parentId):void 0;t.parent=e,null==e||e.children.push(t)}}findRootPerson(){let t,e=0;for(const n of this.personById.values())if(!n.hasParent()){console.info(`Root candidate: "${n.name}"`);const o=this.iterateTreeSize(n);(void 0===t||o>e)&&(t=n,e=o)}if(!(t instanceof r))throw new Error("Did not find a root!");this.root=t,this.pruneOrphans(),console.info(`Selected root person: "${this.root.name}"`),console.info(`Total people after root selection: ${this.personById.size}`)}pruneOrphans(){for(const t of this.personById.values())t.hasParent()||t===this.root||(console.info(`Pruning orphan ${t.name}`),this.personById.delete(t.id))}countLeafNodes(){let t=0;for(const e of this.personById.values())0===e.children.length&&t++;const e=(t/this.personById.size*100).toFixed(1);console.info(`Total leaf nodes: ${t} (${e}%)`)}findTreeHeight(){const t=this.iterateTreeHeight(this.root);console.info(`Tree height: ${t}`)}iterateTreeHeight(t,e=1){let n=e;for(const o of t.children){const t=this.iterateTreeHeight(o,e+1);t>n&&(n=t)}return n}iterateTreeSize(t){let e=0;if(t instanceof r){e++;for(const n of t.children)e+=this.iterateTreeSize(n)}return e}findMaximumDegree(){let t=0,e="";for(const n of this.personById.values()){const o=n.children.length;o>t&&(t=o,e=n.name)}console.info(`Max node degree is ${t} ("${e}")`)}}class s{constructor(t){o.default.json(t).then((t=>this.drawChart(t)))}drawChart(t){console.info(t);const n=new i(t),r=e.tree().nodeSize([25,200])(e.hierarchy(n.getRoot())),s=o.default.select("body").append("svg"),[a,d]=this.getHorizontalBounds(r),[l,h]=this.getVerticalBounds(r),c=o.default.linkHorizontal().x((t=>t.y)).y((t=>t.x)),f=h-l+400,p=d-a+100;s.attr("viewBox",[0,0,f,p].toString());const g=s.append("g").attr("width",f).attr("height",p).attr("font-family","sans-serif").attr("font-size",10).attr("transform",`translate(200, ${12.5-a})`);g.append("g").attr("fill","none").attr("stroke","#555").attr("stroke-opacity",.4).attr("stroke-width",1.5).selectAll("path").data(r.links()).join("path").attr("d",c);const u=g.append("g").attr("stroke-linejoin","round").attr("stroke-width",3).selectAll("g").data(r.descendants()).join("g").attr("transform",(t=>`translate(${t.y},${t.x})`));u.append("svg:image").attr("width",16).attr("height",16).attr("x",-8).attr("y",-8).attr("xlink:href","person.png"),u.append("text").attr("dy","0.0em").attr("x",(t=>t.children?-8:8)).attr("text-anchor",(t=>t.children?"end":"start")).text((t=>t.data.name)).clone(!0).lower().attr("stroke","white"),u.append("text").attr("dy","1.0em").attr("x",(t=>t.children?-8:8)).attr("text-anchor",(t=>t.children?"end":"start")).attr("fill","#888").text((t=>t.data.title)).clone(!0).lower().attr("stroke","white")}getHorizontalBounds(t){let e=1/0,n=-1/0;return t.each((t=>{t.x>n&&(n=t.x),t.x<e&&(e=t.x)})),[e,n]}getVerticalBounds(t){let e=1/0,n=-1/0;return t.each((t=>{t.y>n&&(n=t.y),t.y<e&&(e=t.y)})),[e,n]}redraw(){console.info("redraw called")}}window.addEventListener("load",(()=>new s("example.json")))}(d3,d3);
//# sourceMappingURL=bundle.min.js.map
